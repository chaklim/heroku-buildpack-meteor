#!/bin/sh

BUILD_DIR=$1
CACHE_DIR=$2
METEOR_HOME=$BUILD_DIR/.meteor/local
PATH=$METEOR_HOME:$PATH

fetch_meteor() {
  if [ -f "$METEOR_HOME/tools/latest/bin/meteor" ] ; then
    # Skip if meteor is already fetched
    return
  fi

  #eval $(curl install.meteor.com | grep '^VERSION=')
  #PACKAGE=meteor_${VERSION}-1_amd64.deb
  PACKAGE=meteor_0.6.0.tar.gz

  echo "Fetching meteor tarball"
  curl -o "$CACHE_DIR/$PACKAGE" "https://d3fm2vapipm3k9.cloudfront.net/bootstrap/0.6.0/meteor-bootstrap-Linux_x86_64.tar.gz"

  echo "Unpacking meteor"
  [ ! -d "$METEOR_HOME" ] && mkdir -p "$METEOR_HOME"
  tar -C "$METEOR_HOME" -zxf "$CACHE_DIR/$PACKAGE"
}

build() {
  ( 
    cd $BUILD_DIR
    echo "Building meteor bundle"
    meteor bundle $CACHE_DIR/bundle.tar.gz 
    mkdir -p $BUILD_DIR/.meteor/local/build
    tar -zxf $CACHE_DIR/bundle.tar.gz --strip-components 1 -C $BUILD_DIR/.meteor/local/build
    rm $CACHE_DIR/bundle.tar.gz
  )
}

[ ! -d $BUILD_DIR ] && mkdir $BUILD_DIR
[ ! -d $CACHE_DIR ] && mkdir $CACHE_DIR

fetch_meteor
build

echo "Checking for post_compile script"
if [ -f $BUILD_DIR/bin/post_compile ] ; then
    echo "-----> Running post_compile hook"
    chmod +x $BUILD_DIR/bin/post_compile
    $BUILD_DIR/bin/post_compile
fi
